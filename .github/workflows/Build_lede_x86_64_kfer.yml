#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-CI

on:
  #schedule:
  #  - cron: 0 20 * * *
    
  watch:
    types: [started]

jobs:

  build:

    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@master
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |

          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install wget sudo build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          
          ##git clone the kfermercer code to current dir --flyhi
          sudo mkdir /src/openwrt -p
          sudo chmod 777 /src/openwrt 
          sudo chmod 777 /src
          cd /src/openwrt/
          git clone --depth 1 https://github.com/KFERMercer/OpenWrt.git -b master .


          sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          ln -s /mnt/openwrt/bin ./bin
          mkdir -p ./build_dir
          #ln -s -f /mnt/openwrt/build_dir/host ./build_dir/host
          #ln -s -f /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          #ln -s /mnt/openwrt/dl ./dl
          #ln -s /mnt/openwrt/feeds ./feeds
          #ln -s /mnt/openwrt/staging_dir ./staging_dir
          #/mnt/ only 5g, no space left
          df -h

      - name: Update feeds
        working-directory: /src/openwrt
        run: |
          ./scripts/feeds update -a
          ./scripts/feeds install -a
          
          #install openclash
          git clone https://github.com/vernesong/OpenClash.git -b master package/luci-app-openclash
          pushd package/luci-app-openclash/luci-app-openclash/tools/po2lmo
          make && sudo make install
          popd

      - name: Generate configuration file
        env:
          CONFIG_FILE: 'lede_x86_64_kfer.config'
          CUSTOM_FILE: 'customize.sh'
        run: |
          ##flyhi temp 
          cp ./makeconfig.d/x86_64.config /src/openwrt/.config
          #make defconfig
          #flyhi temp [ -e $CONFIG_FILE ] && mv $CONFIG_FILE /src/openwrt/.config
          [ -e $CUSTOM_FILE ] && mv $CUSTOM_FILE /src/
          cat /src/openwrt/.config
          cat /src/$CUSTOM_FILE
          
          cd /src
          chmod 777 /src/$CUSTOM_FILE && ./$CUSTOM_FILE
          cd /src/openwrt && make defconfig
          
          #some makefile is wrong
          #flyhi tempsed -i 's/\+wol//' package/feeds/luci/luci-app-wol/Makefile

      - name: Make download
        working-directory: /src/openwrt
        run: |
          make download -j8
          find ./dl/ -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        working-directory: /src/openwrt
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1

      - name: Prepare artifact
        working-directory: /src/openwrt
        run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: OpenWrt_firmware
          path: /src/openwrt/bin/targets/
